/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useState, useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap from "gsap"

function Toggle(props) {
  const [hovered, setHover] = useState(false)
  const [on, setON] = useState(false)
  const { nodes, materials } = useGLTF('./model/3Dswitch.glb')
  const EN = useRef()
  const KR = useRef()
  const Toggle = useRef()

  useEffect(() => void (document.body.style.cursor = hovered ? "pointer" : "auto"), [hovered])
  useEffect(() => {
    if (on) {
      /****** KR transform ******/
      gsap.to(EN.current.scale, {
        x: 0.9,
        y: 0.9,
        z: 0.5,
        duration: 1.5,
        ease: "power2.inout",
      })
      gsap.to(KR.current.position, {
        z: -0.1,
        duration: 1,
        ease: "power2.inout",
      })
      gsap.to(Toggle.current.position, {
        x: 1,
        duration: 0.5,
        ease: "power2.inout",
      })
      gsap.to(Toggle.current.rotation, {
        z: 0,
        duration: 0.5,
        ease: "power2.inout",
      })
    } else {
      /****** EN transform ******/
      gsap.to(EN.current.scale, {
        x: 1.02,
        y: 1.02,
        z: 0.581,
        duration: 1.5,
        ease: "power2.inout",
      })
      gsap.to(KR.current.position, {
        z: -1,
        duration: 1,
        ease: "power2.inout",
      })
      gsap.to(Toggle.current.position, {
        x: -1,
        duration: 0.5,
        ease: "power2.inout",
      })
      gsap.to(Toggle.current.rotation, {
        z: Math.PI * 2,
        duration: 0.5,
        ease: "power2.inout",
      })
    }
  }, [on])

  return (
    <group {...props} dispose={null}
      onPointerOut={() => setHover(false)}
      onPointerOver={() => setHover(true)}>

      <mesh onClick={() => setON(!on)}
        geometry={nodes.switchFrame.geometry}
        material={materials.black}
        position={[0, 0, -0.7]}
        scale={1.3}
      />
      <group ref={Toggle} position={[1, 0, 0]} position-x={-1} rotation-z={Math.PI * 2}
      onClick={() => setON(!on)}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes['switch'].geometry}
          material={materials.white}
          scale={[1, 1, 0.57]}
        />
        <group scale={[1.02, 1.02, 0.581]} ref={EN}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.switch003.geometry}
            material={materials.red}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.switch003_1.geometry}
            material={materials.navy}
          />
        </group>
        <group ref={KR} position-z={-1}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Taekuk.geometry}
            material={materials.KO}
            position={[0, 0, 0.316]}
            scale={[0.5, 0.5, 0.3]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube.geometry}
            material={materials.black}
            position={[-0.595, 0.397, 0.316]}
            rotation={[0, 0, 2.553]}
            scale={[-0.03, -0.2, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube001.geometry}
            material={materials.black}
            position={[-0.67, 0.446, 0.316]}
            rotation={[0, 0, 2.553]}
            scale={[-0.03, -0.2, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube002.geometry}
            material={materials.black}
            position={[-0.521, 0.347, 0.316]}
            rotation={[0, 0, 2.553]}
            scale={[-0.03, -0.2, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube003.geometry}
            material={materials.black}
            position={[0.658, -0.316, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube004.geometry}
            material={materials.black}
            position={[-0.674, -0.449, 0.316]}
            rotation={[0, 0, -2.551]}
            scale={[-0.03, -0.2, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube005.geometry}
            material={materials.black}
            position={[-0.527, -0.35, 0.316]}
            rotation={[0, 0, -2.551]}
            scale={[-0.03, -0.2, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube006.geometry}
            material={materials.black}
            position={[0.466, -0.444, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube007.geometry}
            material={materials.black}
            position={[-0.66, -0.311, 0.316]}
            rotation={[0, 0, -2.551]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube008.geometry}
            material={materials.black}
            position={[0.539, -0.493, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube009.geometry}
            material={materials.black}
            position={[0.585, -0.267, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube011.geometry}
            material={materials.black}
            position={[-0.541, -0.488, 0.316]}
            rotation={[0, 0, -2.551]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube012.geometry}
            material={materials.black}
            position={[0.731, -0.365, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube013.geometry}
            material={materials.black}
            position={[0.612, -0.542, 0.316]}
            rotation={[0, 0, 2.55]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube014.geometry}
            material={materials.black}
            position={[0.586, 0.259, 0.316]}
            rotation={[0, 0, -2.561]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube015.geometry}
            material={materials.black}
            position={[0.469, 0.438, 0.316]}
            rotation={[0, 0, -2.561]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube016.geometry}
            material={materials.black}
            position={[0.618, 0.536, 0.316]}
            rotation={[0, 0, -2.561]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube017.geometry}
            material={materials.black}
            position={[0.735, 0.357, 0.316]}
            rotation={[0, 0, -2.561]}
            scale={[-0.03, -0.093, -0.24]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube018.geometry}
            material={materials.black}
            position={[0.602, 0.397, 0.316]}
            rotation={[0, 0, -2.561]}
            scale={[-0.03, -0.2, -0.24]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./model/3Dswitch.glb')
export default Toggle