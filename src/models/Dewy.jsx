/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useState, useEffect } from 'react'
import { useGLTF, Html, Float, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import gsap from "gsap"

function Dewy(props) {
	const { nodes, materials, animations } = useGLTF('/model/Dewy.glb')
	const group = useRef()
	const { actions, names } = useAnimations(animations, group)
	const [hovered, setHover] = useState(false)
	const cloud = useRef()
	const sunMane = useRef()
	const armL = useRef()
	const armR = useRef()
	const eyeLachen = useRef()
	const eyes = useRef()
	const eyelidL = useRef()
	const eyelidR = useRef()
	const face = useRef()
	const faceLachen = useRef()
	const weatherPosY = 4
	const weatherPosX = 3
	const weatherPosZ = 4
	const armDuration = 0.3

	useEffect(() => void (document.body.style.cursor = hovered ? "pointer" : "auto"), [hovered])

	useFrame((state) => {
		if (sunMane.current) {
			sunMane.current.rotation.x -= 0.001
		}
		if (cloud.current) {
			cloud.current.position.y = Math.sin(state.clock.elapsedTime) * 0.2 + weatherPosY
		}
	})

	useEffect(() => {
		actions[names[0]].reset().fadeIn(0.5).play()
		actions[names[1]].reset().fadeIn(0.5).play()
		actions[names[2]].reset().fadeIn(0.5).play()
	})

	useEffect(() => {
		if (hovered || props.dewy_hovered) {
			eyes.current.visible = false
			face.current.visible = false
			eyelidL.current.visible = false
			eyelidR.current.visible = false
			faceLachen.current.visible = true
			eyeLachen.current.visible = true

			gsap.to(armR.current.rotation, {
				x: Math.PI / 2 - 0.4,
				y: 1,
				duration: armDuration,
				ease: "power2.inout",
			})
			gsap.to(armL.current.rotation, {
				x: -Math.PI / 2 + 0.4,
				y: -1,
				duration: armDuration,
				ease: "power2.inout",
			})
		} else {
			eyes.current.visible = true
			face.current.visible = true
			eyelidL.current.visible = true
			eyelidR.current.visible = true
			faceLachen.current.visible = false
			eyeLachen.current.visible = false

			gsap.to(armR.current.rotation, {
				x: Math.PI / 2 + 0.4,
				y: 0,
				duration: armDuration,
				ease: "power2.inout",
			})
			gsap.to(armL.current.rotation, {
				x: -Math.PI / 2 - 0.4,
				y: 0,
				duration: armDuration,
				ease: "power2.inout",
			})
		}
	}, [hovered, props.dewy_hovered])

	return (
		<group {...props} dispose={null} ref={group}>
			<group>
				<group name='sun' position={[-weatherPosX, weatherPosY, -weatherPosZ]} rotation={[0, -Math.PI / 2, 0]} scale={1.5}>
					<mesh ref={sunMane}
						geometry={nodes.sunMane.geometry}
						material={materials.sunMane}
						position={[0, 0, 0]}
						scale={0.516}
					/>
					<mesh
						geometry={nodes.Cylinder.geometry}
						material={materials.sun}
						position={[0.172, 0, 0]}
						rotation={[0, 0, -Math.PI / 2]}
						scale={[0.869, 0.688, 0.869]}
					/>
					<mesh
						geometry={nodes.eyeR002.geometry}
						material={materials.black}
						position={[0.809, 0.173, 0.5]}
						scale={0.053}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.eyeR001.geometry}
						material={materials.black}
						position={[0.809, 0.173, -0.5]}
						scale={0.053}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.smile.geometry}
						material={materials.black}
						position={[0.84, -0.077, 0]}
						rotation={[0, 0, -Math.PI / 2]}
						scale={0.1}
					/>
				</group>
				<group ref={cloud} position={[-weatherPosX, weatherPosY, -weatherPosZ]} rotation={[0, -Math.PI / 2, 0]} scale={1.5}>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.Icosphere.geometry}
						material={materials.white}
						position={[1.038, -0.657, -1.21]}
						scale={0.541}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.Icosphere001.geometry}
						material={materials.white}
						position={[1.038, -0.73, -0.506]}
						scale={0.41}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.Icosphere002.geometry}
						material={materials.white}
						position={[1.038, -0.73, -1.913]}
						scale={0.41}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.eyeR.geometry}
						material={materials.black}
						position={[1.497, -0.575, -1.136]}
						scale={0.043}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.eyeR003.geometry}
						material={materials.black}
						position={[1.497, -0.575, -1.29]}
						scale={0.043}
					/>
					<mesh
						castShadow
						receiveShadow
						geometry={nodes.smile001.geometry}
						material={materials.black}
						position={[1.524, -0.679, -1.211]}
						rotation={[0, 0, -1.701]}
						scale={0.06}
					/>
				</group>
				<Float>
					<Html center occlude="blending" transform wrapperClass='annotation' position={[4, 4, 0]} style={{
						opacity: props.opacity
					}}>
						<div>
							<p className='font-bold' style={{ fontSize: '1.4rem' }}>Dewy Days</p>
							<div className='sub-desc'> Water tracking application </div>
							<div className='sub-logo'>
								<img style={{ width: '2.8rem' }} src='/img/next.svg' />
								<img src='/img/ts.png' alt='typescript'/>
								<img src='/img/neon.png' alt='neon'/>
							</div>
						</div>
					</Html>
					<group position={[1, -4, 0]} rotation={[0, -Math.PI / 2, 0]} scale={1.5}
						onPointerOut={() => setHover(false)}
						onPointerOver={() => setHover(true)}>
						<group name="Armature">
							<skinnedMesh
								name="legs"
								geometry={nodes.legs.geometry}
								material={materials.dewy}
								skeleton={nodes.legs.skeleton}
							/>
							<primitive object={nodes.Bone} />
							<primitive object={nodes.Bone001} />
							<primitive object={nodes.Bone003} />
						</group>
						<mesh ref={armL} rotation={[-Math.PI / 2 - 0.4, 0, 0]} position={[0.1, 1.1, -0.4]}
							name="armL"
							castShadow
							receiveShadow
							geometry={nodes.armL.geometry}
							material={materials.dewy}
							scale={[0.654, 0.447, 0.654]}
						/>
						<mesh ref={armR} rotation={[Math.PI / 2 + 0.4, 0, 0]} position={[0.1, 1.1, 0.4]}
							name="armL"
							castShadow
							receiveShadow
							geometry={nodes.armL.geometry}
							material={materials.dewy}
							scale={[0.654, 0.447, 0.654]}
						/>

						<group position={[0, 0, 0]} scale={2.023} name='Tube'>
							<mesh
								castShadow
								receiveShadow
								geometry={nodes.Torus003.geometry}
								material={materials.sky}
							/>
							<mesh
								castShadow
								receiveShadow
								geometry={nodes.Torus003_1.geometry}
								material={materials.blue}
							/>
						</group>

						<mesh name='body' visible={true}
							castShadow
							receiveShadow
							geometry={nodes.body.geometry}
							material={materials.dewy}
							position={[0, 0.366, 0]}
							scale={[1.371, 0.993, 1.371]}
						/>
						<mesh name='head'
							castShadow
							receiveShadow
							geometry={nodes.head003.geometry}
							material={materials.dewy}
							position={[0, 2.233, 0]}
							scale={1.054}
						/>
						<mesh name='pompom'
							castShadow
							receiveShadow
							geometry={nodes.pompom.geometry}
							material={materials.dots}
							position={[0.654, 1.133, 0.199]}
							rotation={[-0.333, -0.731, 0.704]}
							scale={[0.08, 0.16, 0.14]}
						/>

						<group ref={eyes} visible={true}>
							<mesh
								name="eyeball002"
								castShadow
								receiveShadow
								geometry={nodes.eyeball002.geometry}
								material={materials.eye}
								position={[0.856, 2.19, -0.246]}
								rotation={[0.076, -0.184, -1.54]}
								scale={0.209}
							/>
							<mesh
								name="eyeball003"
								castShadow
								receiveShadow
								geometry={nodes.eyeball003.geometry}
								material={materials.eye}
								position={[0.856, 2.19, 0.246]}
								rotation={[0.076, -0.184, -1.54]}
								scale={0.209}
							/>
						</group>

						<mesh ref={eyelidR}
							name="eyelidL001"
							castShadow
							receiveShadow
							geometry={nodes.eyelidL001.geometry}
							material={materials.face}
							position={[0.856, 2.204, -0.205]}
							rotation={[0, 0, 0.83]}
							scale={0.209}
						/>

						<mesh ref={eyelidL}
							name="eyelidL"
							castShadow
							receiveShadow
							geometry={nodes.eyelidL.geometry}
							material={materials.face}
							position={[0.856, 2.204, 0.254]}
							rotation={[0, 0, 0.83]}
							scale={0.209}
						/>

						<mesh name='nose'
							castShadow
							receiveShadow
							geometry={nodes.nose.geometry}
							material={materials.face}
							position={[0.984, 2.067, 0]}
							rotation={[0, 0, -0.165]}
							scale={0.053}
						/>
						<mesh ref={eyeLachen} visible={false}
							castShadow
							receiveShadow
							geometry={nodes.eyeLachen.geometry}
							material={materials.black}
							position={[1.02, 2.157, 0.106]}
							rotation={[-0.101, -0.275, -0.01]}
							scale={0.038}
						/>
						<group ref={faceLachen} position={[0, 2.233, 0]} scale={1.032} visible={false}>
							<mesh
								castShadow
								receiveShadow
								geometry={nodes.Sphere007.geometry}
								material={materials.face}
							/>
							<mesh
								castShadow
								receiveShadow
								geometry={nodes.Sphere007_1.geometry}
								material={materials.red}
							/>
						</group>

						<group ref={face}>
							<group position={[0, 2.233, 0]} scale={1.032}>
								<mesh castShadow receiveShadow geometry={nodes.Sphere.geometry} material={materials.face} />
								<mesh
									castShadow
									receiveShadow
									geometry={nodes.Sphere_1.geometry}
									material={materials.eyeball}
								/>
							</group>
							<mesh
								castShadow
								receiveShadow
								geometry={nodes.smile003.geometry}
								material={materials.black}
								position={[0.987, 1.976, 0.002]}
								rotation={[0, 0, -1.848]}
								scale={0.12}
							/>
						</group>
					</group>
				</Float>
			</group>
		</group>
	)
}

useGLTF.preload('/model/Dewy.glb')
export default Dewy