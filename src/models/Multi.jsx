/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useState, useEffect } from 'react'
import { useGLTF, Html, Float } from '@react-three/drei'
import { param } from '@/lib/param'
import gsap from "gsap"

function Multi(props) {
  const { nodes, materials } = useGLTF('./model/multiculture.glb')
  const [hovered, setHover] = useState(false)
  useEffect(() => void (document.body.style.cursor = hovered ? "pointer" : "auto"), [hovered])
  const scaleX = 0.08
  const scaleXhover = 0.01
  const y0 = useRef(null)
  const y1 = useRef(null)
  const y2 = useRef(null)
  const y3 = useRef(null)
  const y4 = useRef(null)
  const m0 = useRef(null)
  const m1 = useRef(null)
  const m2 = useRef(null)
  const m3 = useRef(null)
  const m4 = useRef(null)
  const c0 = useRef(null)
  const c1 = useRef(null)
  const c2 = useRef(null)
  const c3 = useRef(null)
  const c4 = useRef(null)
  const dot0 = useRef(null)
  const dot1 = useRef(null)
  const dot2 = useRef(null)
  const dot3 = useRef(null)
  const dot4 = useRef(null)
  const dot5 = useRef(null)

  useEffect(() => {
    if (hovered || props.MM_hovered) {
      gsap.to(y0.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(y1.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(y2.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(y3.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(y4.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(m0.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(m1.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(m2.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(m3.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(m4.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(c0.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(c1.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(c2.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(c3.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(c4.current.scale, { x: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot0.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot1.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot2.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot3.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot4.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot5.current.scale, { x: scaleXhover, y: scaleXhover, duration: 0.4, ease: "power2.inout" })
    } else {
      gsap.to(y0.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(y1.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(y2.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(y3.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(y4.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(m0.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(m1.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(m2.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(m3.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(m4.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(c0.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(c1.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(c2.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(c3.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(c4.current.scale, { x: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot0.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot1.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot2.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot3.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot4.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
      gsap.to(dot5.current.scale, { x: scaleX, y: scaleX, duration: 0.4, ease: "power2.inout" })
    }
  }, [hovered, props.MM_hovered])

  return (
    <Float rotationIntensity={0.2} floatIntensity={0.1} floatingRange={[0.05, 0.05]} speed={0.5}>
      <group {...props} dispose={null}
        onPointerOut={() => setHover(false)}
        onPointerOver={() => setHover(true)}>
        <Html center occlude="blending" transform wrapperClass='annotation' position={[0, -4.1, 0]} style={{
          opacity: props.opacity
        }}>
          <div>
            <p className='font-bold' style={{ fontSize: '1.2rem' }}>Multicultural Museum Korea</p>
            <div className='sub-logo'>
              {/* <img style={{ width: '2.8rem' }} src='./img/next.svg' />
              <img src='./img/js.png' /> */}
              Brand design
            </div>
          </div>
        </Html>
        <group scale={3}>
          <group>
            <group position={[0.038, 0.041, 0]} scale={[1.087, 1.087, 0.135]} />
            <mesh ref={dot0}
              geometry={nodes.Cylinder.geometry}
              material={materials['r-3']}
              position={[0, 1, 0]}
              scale={[scaleX, scaleX, 0.13]}>
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <mesh ref={dot1}
              geometry={nodes.Cylinder001.geometry}
              material={materials['r-3']}
              position={[0, -1, 0]}
              scale={[scaleX, scaleX, 0.13]}>
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <mesh ref={dot2}
              geometry={nodes.Cylinder002.geometry}
              material={materials['g-3']}
              position={[-0.866, 0.5, 0]}
              rotation={[0, 0, Math.PI / 3]}
              scale={[scaleX, scaleX, 0.13]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <mesh ref={dot3}
              geometry={nodes.Cylinder003.geometry}
              material={materials['g-3']}
              position={[0.866, -0.5, 0]}
              rotation={[0, 0, Math.PI / 3]}
              scale={[scaleX, scaleX, 0.13]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <mesh ref={dot4}
              geometry={nodes.Cylinder004.geometry}
              material={materials.black}
              position={[-0.866, -0.5, 0]}
              rotation={[0, 0, 2.094]}
              scale={[scaleX, scaleX, 0.13]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <mesh ref={dot5}
              geometry={nodes.Cylinder005.geometry}
              material={materials.black}
              position={[0.866, 0.5, 0]}
              rotation={[0, 0, 2.094]}
              scale={[scaleX, scaleX, 0.13]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
            </mesh>
            <group ref={c0} rotation={[0, 0, 2.094]} scale={[scaleX, 1, 0.121]}>
              <mesh geometry={nodes.Cube010_1.geometry} material={materials.cyan}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.cyan} />
              </mesh>
              <mesh geometry={nodes.Cube010_2.geometry} material={materials['c-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.c1} />
              </mesh>
            </group>
            <mesh ref={c1}
              geometry={nodes.Cube004.geometry}
              material={materials.cyan}
              position={[-0.866, 0, 0]}
              scale={[scaleX, 0.5, 0.119]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.cyan} />
            </mesh>
            <mesh ref={c2}
              geometry={nodes.Cube005.geometry}
              material={materials.cyan}
              position={[0.864, 0, 0]}
              scale={[scaleX, 0.5, 0.119]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.cyan} />
            </mesh>
            <mesh ref={c3}
              geometry={nodes.Cube001.geometry}
              material={materials.cyan}
              position={[0, -0.5, 0]}
              rotation={[0, 0, Math.PI / 2]}
              scale={[scaleX, 0.86, 0.12]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.cyan} />
            </mesh>
            <mesh ref={c4}
              geometry={nodes.Cube002.geometry}
              material={materials.cyan}
              position={[0, 0.5, 0]}
              rotation={[0, 0, Math.PI / 2]}
              scale={[scaleX, 0.86, 0.12]}
            >
              <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.cyan} />
            </mesh>
            <group ref={m0} position={[0.433, -0.25, 0]} rotation={[0, 0, 2.618]} scale={[scaleX, 0.86, 0.122]}>
              <mesh geometry={nodes.Cube008_1.geometry} material={materials.magenta}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.magenta} />
              </mesh>
              <mesh geometry={nodes.Cube008_2.geometry} material={materials.navy}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.navy} />
              </mesh>
              <mesh geometry={nodes.Cube008_3.geometry} material={materials['n-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n1} />
              </mesh>
              <mesh geometry={nodes.Cube008_4.geometry} material={materials['n-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n2} />
              </mesh>
            </group>
            <group ref={m1} position={[-0.433, 0.25, 0]} rotation={[0, 0, 2.618]} scale={[scaleX, 0.86, 0.122]}>
              <mesh geometry={nodes.Cube009_1.geometry} material={materials.magenta}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.magenta} />
              </mesh>
              <mesh geometry={nodes.Cube009_2.geometry} material={materials.navy}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.navy} />
              </mesh>
              <mesh geometry={nodes.Cube009_3.geometry} material={materials['n-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n1} />
              </mesh>
            </group>
            <group ref={m2}
              position={[-0.433, -0.75, 0]}
              rotation={[0, 0, Math.PI / 3]}
              scale={[scaleX, 0.5, 0.123]}>
              <mesh geometry={nodes.Cube011_1.geometry} material={materials.magenta}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.magenta} />
              </mesh>
              <mesh geometry={nodes.Cube011_2.geometry} material={materials['m-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.m1} />
              </mesh>
              <mesh geometry={nodes.Cube011_3.geometry} material={materials['n-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n1} />
              </mesh>
            </group>
            <group ref={m3}
              position={[0.432, 0.748, 0]}
              rotation={[0, 0, Math.PI / 3]}
              scale={[scaleX, 0.5, 0.123]}>
              <mesh geometry={nodes.Cube012_1.geometry} material={materials.magenta}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.magenta} />
              </mesh>
              <mesh geometry={nodes.Cube012_2.geometry} material={materials['m-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.m1} />
              </mesh>
              <mesh geometry={nodes.Cube012_3.geometry} material={materials['n-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n1} />
              </mesh>
              <mesh geometry={nodes.Cube012_4.geometry} material={materials['n-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.n2} />
              </mesh>
            </group>
            <group ref={m4} position={[-0.001, 0, 0]} rotation={[0, 0, -Math.PI]} scale={[scaleX, 1, 0.124]}>
              <mesh geometry={nodes.Cube015_1.geometry} material={materials.magenta}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.magenta} />
              </mesh>
              <mesh geometry={nodes.Cube015_2.geometry} material={materials.navy}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.navy} />
              </mesh>
              <mesh geometry={nodes.Cube015_3.geometry} material={materials['m-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.m1} />
              </mesh>
            </group>
            <group ref={y0} rotation={[0, 0, Math.PI / 3]} scale={[scaleX, 1, 0.127]}>
              <mesh geometry={nodes.Cube005_1.geometry} material={materials.yellow}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.yellow} />
              </mesh>
              <mesh geometry={nodes.Cube005_2.geometry} material={materials.black}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.black} />
              </mesh>
              <mesh geometry={nodes.Cube005_3.geometry} material={materials.green}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube005_4.geometry} material={materials.red}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.red} />
              </mesh>
              <mesh geometry={nodes.Cube005_5.geometry} material={materials['y-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.y1} />
              </mesh>
              <mesh geometry={nodes.Cube005_6.geometry} material={materials['g-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.g2} />
              </mesh>
              <mesh geometry={nodes.Cube005_7.geometry} material={materials['g-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.g1} />
              </mesh>
              <mesh geometry={nodes.Cube005_8.geometry} material={materials['y-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.y1} />
              </mesh>
            </group>
            <group ref={y1} position={[0.432, 0.25, 0]} rotation={[0, 0, -2.618]} scale={[scaleX, 0.86, 0.125]}>
              <mesh geometry={nodes.Cube013_1.geometry} material={materials.yellow}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.yellow} />
              </mesh>
              <mesh geometry={nodes.Cube013_2.geometry} material={materials['y-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube013_3.geometry} material={materials.red}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.red} />
              </mesh>
              <mesh geometry={nodes.Cube013_4.geometry} material={materials.green}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube013_5.geometry} material={materials['r-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r1} />
              </mesh>
              <mesh geometry={nodes.Cube013_6.geometry} material={materials['r-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r2} />
              </mesh>
            </group>
            <group ref={y2} position={[-0.434, -0.25, 0]} rotation={[0, 0, -2.618]} scale={[scaleX, 0.86, 0.125]}>
              <mesh geometry={nodes.Cube014_1.geometry} material={materials.yellow}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.yellow} />
              </mesh>
              <mesh geometry={nodes.Cube014_2.geometry} material={materials['y-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube014_3.geometry} material={materials.red}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.red} />
              </mesh>
              <mesh geometry={nodes.Cube014_4.geometry} material={materials.green}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube014_5.geometry} material={materials['r-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r1} />
              </mesh>
              <mesh geometry={nodes.Cube014_6.geometry} material={materials['r-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r2} />
              </mesh>
              <mesh geometry={nodes.Cube014_7.geometry} material={materials['g-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.g1} />
              </mesh>
            </group>
            <group ref={y3} position={[0.432, -0.75, 0]} rotation={[0, 0, 2.094]} scale={[0.08, 0.5, 0.126]}>
              <mesh geometry={nodes.Cube016.geometry} material={materials.yellow}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.yellow} />
              </mesh>
              <mesh geometry={nodes.Cube016_1.geometry} material={materials.red}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.red} />
              </mesh>
              <mesh geometry={nodes.Cube016_2.geometry} material={materials['r-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r1} />
              </mesh>
              <mesh geometry={nodes.Cube016_3.geometry} material={materials.green}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
              <mesh geometry={nodes.Cube016_4.geometry} material={materials['r-3']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r2} />
              </mesh>
            </group>
            <group ref={y4} position={[-0.433, 0.748, 0]} rotation={[0, 0, 2.094]} scale={[scaleX, 0.5, 0.126]}>
              <mesh geometry={nodes.Cube017.geometry} material={materials.yellow}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.yellow} />
              </mesh>
              <mesh geometry={nodes.Cube017_1.geometry} material={materials.red}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.red} />
              </mesh>
              <mesh geometry={nodes.Cube017_2.geometry} material={materials['r-1']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r1} />
              </mesh>
              <mesh geometry={nodes.Cube017_3.geometry} material={materials['r-2']}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.r2} />
              </mesh>
              <mesh geometry={nodes.Cube017_4.geometry} material={materials.green}>
                <meshStandardMaterial color={hovered || props.MM_hovered ? param.white : param.green} />
              </mesh>
            </group>
          </group>
        </group>
      </group>
    </Float>
  )
}

useGLTF.preload('./model/multiculture.glb')
export default Multi